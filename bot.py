import telebot
from telebot import types
import json

bot = telebot.TeleBot(' ')

with open('vacancies.json', 'r', encoding='utf-8') as file:
    data = json.load(file)
current_vacancy_index = 0

@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == "/start":
        buttons = types.ReplyKeyboardMarkup(resize_keyboard=True)
        navigator_button = types.KeyboardButton("‚≠ê –ù–∞–≤–∏–≥–∞—Ç–æ—Ä –ú–ì–ö–≠–ò–¢")
        vacancy_button = types.KeyboardButton("üéì –í–∞–∫–∞–Ω—Å–∏–∏")
        skip = types.KeyboardButton("")
        job_button = types.KeyboardButton("üíº –ü–æ–º–æ—â—å –≤ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ")
        resume_tips = types.KeyboardButton("üìÑ –°–æ–≤–µ—Ç—ã –ø–æ —Ä–µ–∑—é–º–µ")
        buttons.add(navigator_button, vacancy_button, skip, job_button, resume_tips)
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç!\n–ë–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –≤ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ —Å—Ç—É–¥–µ–Ω—Ç–∞–º –ú–ì–ö–≠–ò–¢\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é", reply_markup=buttons)
    
    elif message.text == "‚≠ê –ù–∞–≤–∏–≥–∞—Ç–æ—Ä –ú–ì–ö–≠–ò–¢":
        bot.send_message(message.chat.id, "–ù–∞–≤–∏–≥–∞—Ç–æ—Ä –ú–ì–ö–≠–ò–¢ - —É–¥–æ–±–Ω—ã–π —Å–µ—Ä–≤–∏—Å, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤—É.\n–ù–∞–≤–∏–≥–∞—Ç–æ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://navigator.mgkeit")
    
    elif message.text == "üéì –í–∞–∫–∞–Ω—Å–∏–∏":
        markup = types.InlineKeyboardMarkup()
        it = types.InlineKeyboardButton("IT-–æ—Ç–¥–µ–ª–µ–Ω–∏–µ", callback_data="it")
        design = types.InlineKeyboardButton("–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω", callback_data="design")
        electrical_installation = types.InlineKeyboardButton("–≠–ª–µ–∫—Ç—Ä–æ–º–æ–Ω—Ç–∞–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã", callback_data="electrical_installation")

        markup.row(it, design)
        markup.row(electrical_installation)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—ë –æ—Ç–¥–µ–ª–µ–Ω–∏–µ", reply_markup=markup)
    
    elif message.text == "üíº –ü–æ–º–æ—â—å –≤ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ":
        markup = types.InlineKeyboardMarkup()
        employment_department = types.InlineKeyboardButton("–û—Ç–¥–µ–ª —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞", callback_data="employment_department")
        individual_graphic = types.InlineKeyboardButton("–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫", callback_data="individual_graphic")
        faq = types.InlineKeyboardButton("FAQ", callback_data="FAQ")
        markup.row(employment_department, individual_graphic)
        markup.row(faq)
        bot.send_message(message.chat.id, "–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    global current_vacancy_index

    def send_menu_message(chat_id):
        markup = types.InlineKeyboardMarkup()
        employment_department = types.InlineKeyboardButton("–û—Ç–¥–µ–ª —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞", callback_data="employment_department")
        individual_graphic = types.InlineKeyboardButton("–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫", callback_data="individual_graphic")
        faq = types.InlineKeyboardButton("–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—é–º–µ", callback_data="FAQ")
        markup.row(employment_department, individual_graphic)
        markup.row(faq)
        bot.send_message(chat_id, "–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)

    markup = types.InlineKeyboardMarkup()
    back_to_menu = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_to_menu")
    back_to_start = types.InlineKeyboardButton("–í –º–µ–Ω—é", callback_data="back_to_start")
    markup.row(back_to_menu, back_to_start)

    if call.data == "employment_department":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="–û—Ç–¥–µ–ª —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ú–ì–ö–≠–ò–¢ –ø–æ–º–æ–≥–∞–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞–º –≤ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ: –ø–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π, —Ä–∞–∑–≤–∏—Ç–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä–µ–∑—é–º–µ –∏ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ.",
                              reply_markup=markup)

    elif call.data == "individual_graphic":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ –æ–±—É—á–µ–Ω–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–≤–µ—Å—Ç–∏—Å—å –Ω–∞ —Å–∞–º—ã–µ —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º—ã –æ–±—É—á–µ–Ω–∏—è: –∑–∞–æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è –∏–ª–∏ –≥—Ä–∞—Ñ–∏–∫ 2/2, 3/3.\n\n–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ —Å—Ç—É–¥–µ–Ω—Ç–∞–º, —Ä–∞–±–æ—Ç–∞—é—â–∏–º –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —É –∫—É—Ä–∞—Ç–æ—Ä–∞ –≥—Ä—É–ø–ø—ã –∏–ª–∏ –≤ –æ—Ç–¥–µ–ª–µ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞",
                              reply_markup=markup)

    elif call.data == "help_resources":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="–ù–∞–≤–∏–≥–∞—Ç–æ—Ä –ú–ì–ö–≠–ò–¢: navigator.mgkeit\n–¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª –†–∞–±–æ—Ç–∞ –æ—Ç –ú–ì–ö–≠–ò–¢: t.me/VacanciMGKEIT")

    elif call.data == "back_to_menu":
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        send_menu_message(call.message.chat.id)

    elif call.data == "FAQ":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="- –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ–∑—é–º–µ: —Ä–µ–∑—é–º–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —á–µ—Ç–∫—É—é –∏ –ª–µ–≥–∫–æ —á–∏—Ç–∞–µ–º—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É. –û–±—ã—á–Ω–æ –æ–Ω–æ –≤–∫–ª—é—á–∞–µ—Ç —Ä–∞–∑–¥–µ–ª—ã: –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ü–µ–ª—å, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã, –≥–∏–±–∫–∏–µ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–∫–ª—é—á–∏—Ç—å —Å—é–¥–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤, –µ—Å–ª–∏ —Ç–∞–∫–æ–≤—ã–µ –∏–º–µ—é—Ç—Å—è.\n\n- –ü–∏—à–∏—Ç–µ —Ä–µ–∑—é–º–µ –≥—Ä–∞–º–æ—Ç–Ω–æ: –∏–∑–±–µ–≥–∞–π—Ç–µ –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏ —Å—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏.\n\n- –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —Ä–µ–∑—é–º–µ –ø–æ–¥ —Ä–∞–∑–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏: –≤—ã–¥–µ–ª—è–π—Ç–µ –æ–ø—ã—Ç –∏ –Ω–∞–≤—ã–∫–∏, –Ω–∞–∏–±–æ–ª–µ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π.\n\n- –£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª–∏ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö –≤ —Å–∞–º–æ–º —Ä–µ–∑—é–º–µ, —ç—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ '–ö–æ–Ω—Ç–∞–∫—Ç—ã'.\n\n- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Ñ–∞–π–ª–æ–≤, —á—Ç–æ–± –æ–Ω–∏ –æ—Ç–∫—Ä—ã–≤–∞–ª–∏—Å—å –Ω–∞ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö. –õ—É—á—à–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ä–µ–∑—é–º–µ - .pdf",
                              reply_markup=markup)

    elif call.data == "back_to_start":
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        send_start_message(call.message.chat.id)

    # –í–ê–ö–ê–ù–°–ò–ò
    elif call.data == "it":
        vacancy_buttons = types.InlineKeyboardMarkup()
        back_to_start = types.InlineKeyboardButton("–í –º–µ–Ω—é", callback_data="back_to_start")
        next_button = types.InlineKeyboardButton(">", callback_data="next")
        back_button = types.InlineKeyboardButton("<", callback_data="back")
        vacancy_buttons.row(back_button, back_to_start, next_button)

        send_vacancy_message(call.message.chat.id, current_vacancy_index, call.message.message_id, vacancy_buttons)

    elif call.data == "next":
        if current_vacancy_index < len(data) - 1:
            current_vacancy_index += 1
            vacancy_buttons = types.InlineKeyboardMarkup()
            back_to_start = types.InlineKeyboardButton("–í –º–µ–Ω—é", callback_data="back_to_start")
            next_button = types.InlineKeyboardButton(">", callback_data="next")
            back_button = types.InlineKeyboardButton("<", callback_data="back")
            vacancy_buttons.row(back_button, back_to_start, next_button)
            send_vacancy_message(call.message.chat.id, current_vacancy_index, call.message.message_id, vacancy_buttons)
        else:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –¥–æ—Å—Ç—É–ø–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥.")
            current_vacancy_index = 0

    elif call.data == "back":
        if current_vacancy_index > 0:
            current_vacancy_index -= 1
            vacancy_buttons = types.InlineKeyboardMarkup()
            back_to_start = types.InlineKeyboardButton("–í –º–µ–Ω—é", callback_data="back_to_start")
            next_button = types.InlineKeyboardButton(">", callback_data="next")
            back_button = types.InlineKeyboardButton("<", callback_data="back")
            vacancy_buttons.row(back_button, back_to_start, next_button)
            send_vacancy_message(call.message.chat.id, current_vacancy_index, call.message.message_id, vacancy_buttons)
        else:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–≠—Ç–æ –ø–µ—Ä–≤–∞—è –¥–æ—Å—Ç—É–ø–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è.")
            current_vacancy_index = 0

def send_vacancy_message(chat_id, vacancy_index, message_id, reply_markup=None):
    if 0 <= vacancy_index < len(data):
        vacancy = data[vacancy_index]
        vacancy_message = f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏:</b> {vacancy['name']}\n"
        vacancy_message += f"<b>–ö–æ–º–ø–∞–Ω–∏—è:</b> {vacancy['company']}\n"
        vacancy_message += f"<b>–ó–∞—Ä–ø–ª–∞—Ç–∞:</b> {vacancy['salary'] if vacancy.get('salary') else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n"
        vacancy_message += f"<b>–ó–∞–¥–∞—á–∏:</b>\n<i>{vacancy['tasks']}</i>\n"
        vacancy_message += f"<b>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</b>\n<i>{vacancy['requirements']}</i>\n"
        vacancy_message += f"<b>–ì—Ä–∞—Ñ–∏–∫:</b>{vacancy['graphic']['name'] if vacancy.get('schedule') else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        vacancy_message += f"<b>–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é:</b><i>{vacancy['vacancy_link']}</i>\n"

        bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=vacancy_message, reply_markup=reply_markup, parse_mode="HTML")

def send_start_message(chat_id):
    buttons = types.ReplyKeyboardMarkup(resize_keyboard=True)
    navigator_button = types.KeyboardButton("‚≠ê –ù–∞–≤–∏–≥–∞—Ç–æ—Ä –ú–ì–ö–≠–ò–¢")
    vacancy_button = types.KeyboardButton("üéì –í–∞–∫–∞–Ω—Å–∏–∏")
    skip = types.KeyboardButton("")
    job_button = types.KeyboardButton("üíº –ü–æ–º–æ—â—å –≤ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ")
    events = types.KeyboardButton("üóìÔ∏è –°–æ–±—ã—Ç–∏—è")
    resume_tips = types.KeyboardButton("üìÑ –°–æ–≤–µ—Ç—ã –ø–æ —Ä–µ–∑—é–º–µ")
    buttons.add(navigator_button, vacancy_button, skip, job_button, events, skip, resume_tips)
    bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç!\n–ë–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –≤ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ —Å—Ç—É–¥–µ–Ω—Ç–∞–º –ú–ì–ö–≠–ò–¢\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é", reply_markup=buttons)

bot.polling(none_stop=True, interval=0)
